import logging
import requests
from aiogram import Bot, Dispatcher, types, F
from aiogram.filters import Command
from aiogram.types import Message
from aiogram.utils.keyboard import ReplyKeyboardBuilder
from aiogram.enums import ParseMode
from aiogram.client.default import DefaultBotProperties

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# API –∫–ª—é—á–∏
WEATHER_API_KEY = "–¢–û–ö–ï–ù_–°–ö–†–´–¢_–ü–û_–ü–†–ï–î–û–°–¢–ê–í–õ–ï–ù–ò–Æ_–ê–í–¢–û–†–ê"
WEATHER_URL = "https://api.weatherapi.com/v1/current.json" 

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ —Å –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
bot = Bot(token="–¢–û–ö–ï–ù_–°–ö–†–´–¢_–ü–û_–ü–†–ï–î–û–°–¢–ê–í–õ–ï–ù–ò–Æ_–ê–í–¢–û–†–ê",default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

# –§—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–≤–µ—Ç–∞ –ø–æ –æ–¥–µ–∂–¥–µ
def get_outfit_suggestion(temp_c, precip_mm, wind_kph, condition_code):
    outfit = ""

    if temp_c < -10:
        outfit = "–£—Ç–µ–ø–ª–µ–Ω–Ω–∞—è –∫—É—Ä—Ç–∫–∞, —Ç–µ—Ä–º–æ–±–µ–ª—å–µ, —Å–≤–∏—Ç–µ—Ä, –≤–æ–¥–æ–Ω–µ–ø—Ä–æ–Ω–∏—Ü–∞–µ–º—ã–µ —à—Ç–∞–Ω—ã, —à–∞–ø–∫–∞, —à–∞—Ä—Ñ, –ø–µ—Ä—á–∞—Ç–∫–∏."
    elif temp_c < 0:
        outfit = "–¢–µ–ø–ª–∞—è –∫—É—Ä—Ç–∫–∞, —à–∞–ø–∫–∞, —à–∞—Ä—Ñ, —Ç–µ–ø–ª—ã–π —Å–≤–∏—Ç–µ—Ä, –±—Ä—é–∫–∏ –∏ –∑–∏–º–Ω—è—è –æ–±—É–≤—å."
    elif temp_c < 10:
        outfit = "–ö–æ—Ñ—Ç–∞, –ª–µ–≥–∫–∞—è –∫—É—Ä—Ç–∫–∞, –¥–∂–∏–Ω—Å—ã, —É–¥–æ–±–Ω–∞—è –æ–±—É–≤—å. –í–æ–∑—å–º–∏ –∑–æ–Ω—Ç."
    elif temp_c < 20:
        outfit = "–§—É—Ç–±–æ–ª–∫–∞ –∏–ª–∏ —Å–≤–∏—Ç—à–æ—Ç, –¥–∂–∏–Ω—Å—ã –∏–ª–∏ —é–±–∫–∞, –∫—Ä–æ—Å—Å–æ–≤–∫–∏."
    elif temp_c < 30:
        outfit = "–õ–µ–≥–∫–∞—è —Ñ—É—Ç–±–æ–ª–∫–∞, —à–æ—Ä—Ç—ã –∏–ª–∏ —é–±–∫–∞, —Å–∞–Ω–¥–∞–ª–∏–∏, –≥–æ–ª–æ–≤–Ω–æ–π —É–±–æ—Ä."
    else:
        outfit = "–ú–∞–π–∫–∞, —à–æ—Ä—Ç—ã, —Å–æ–ª–Ω—Ü–µ–∑–∞—â–∏—Ç–Ω—ã–µ –æ—á–∫–∏, –≥–æ–ª–æ–≤–Ω–æ–π —É–±–æ—Ä –∏ –º–Ω–æ–≥–æ –≤–æ–¥—ã."

    if precip_mm > 1:
        outfit += " –ù–µ –∑–∞–±—É–¥—å –≤–∑—è—Ç—å –∑–æ–Ω—Ç –∏–ª–∏ –¥–æ–∂–¥–µ–≤–∏–∫!"

    if wind_kph > 30:
        outfit += " –ó–∞—â–∏—Ç–∏ –ª–∏—Ü–æ –æ—Ç –≤–µ—Ç—Ä–∞, –≤—ã–±–µ—Ä–∏ –≤–µ—Ç—Ä–æ–∑–∞—â–∏—Ç–Ω—É—é –æ–¥–µ–∂–¥—É."

    if 1063 <= condition_code <= 1183:
        outfit += " –°–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ –±—É–¥–µ—Ç –¥–æ–∂–¥—å ‚Äî –ø–æ–¥–≥–æ—Ç–æ–≤—å—Å—è!"

    if 1066 <= condition_code <= 1072:
        outfit += " –ú–æ–∂–µ—Ç –±—ã—Ç—å —Å–Ω–µ–≥ ‚Äî –ø—Ä–æ–≤–µ—Ä—å —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É –∏ –æ–¥–µ–Ω—å—Å—è —Ç–µ–ø–ª–æ."

    return outfit


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message(Command("start"))
async def start_command(message: types.Message):
    await message.answer(
        "–ü—Ä–∏–≤–µ—Ç! –Ø DressCast üå§Ô∏è\n"
        "–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –≤—ã–±—Ä–∞—Ç—å –æ–¥–µ–∂–¥—É –ø–æ–¥ –ø–æ–≥–æ–¥—É.\n"
        "–ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –º–Ω–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞!"
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å –Ω–∞–∑–≤–∞–Ω–∏–µ–º –≥–æ—Ä–æ–¥–∞
@dp.message(F.text)
async def handle_city(message: types.Message):
    city = message.text.strip()

    if not city:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.")
        return

    params = {
        'key': WEATHER_API_KEY,
        'q': city,
        'aqi': 'no'
    }

    try:
        response = requests.get(WEATHER_URL, params=params)
        response.raise_for_status()
        data = response.json()

        current = data['current']
        location = data['location']

        temp_c = current['temp_c']
        precip_mm = current['precip_mm']
        wind_kph = current['wind_kph']
        condition_code = current['condition']['code']

        outfit = get_outfit_suggestion(temp_c, precip_mm, wind_kph, condition_code)

        response_message = (
            f"üå§ –ü–æ–≥–æ–¥–∞ –≤ {location['name']}, {location['country']}:\n"
            f"üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temp_c}¬∞C\n"
            f"üåß –û—Å–∞–¥–∫–∏: {precip_mm} –º–º\n"
            f"üå¨ –í–µ—Ç–µ—Ä: {wind_kph} –∫–º/—á\n\n"
            f"üëó –°–æ–≤–µ—Ç –ø–æ –æ–¥–µ–∂–¥–µ:\n{outfit}"
        )

        await message.answer(response_message)

    except requests.exceptions.HTTPError as e:
        if response.status_code == 400:
            await message.answer("–ì–æ—Ä–æ–¥ –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â—ë —Ä–∞–∑.")
        else:
            await message.answer("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ.")
    except Exception as e:
        logger.error(f"Error: {e}")
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == '__main__':
    import asyncio
    asyncio.run(main())
